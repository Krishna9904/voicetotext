from flask import Flask, jsonify
import random

app = Flask(__name__)

# Sample user data
users = [
    {
        "id": 1,
        "name": {"first": "John", "last": "Doe"},
        "email": "john.doe@example.com",
        "picture": {"medium": "https://via.placeholder.com/150"}
    },
    {
        "id": 2,
        "name": {"first": "Jane", "last": "Smith"},
        "email": "jane.smith@example.com",
        "picture": {"medium": "https://via.placeholder.com/150"}
    },
    {
        "id": 3,
        "name": {"first": "Alice", "last": "Johnson"},
        "email": "alice.johnson@example.com",
        "picture": {"medium": "https://via.placeholder.com/150"}
    }
]

@app.route('/api/user', methods=['GET'])
def get_random_user():
    # Return a random user from the list
    user = random.choice(users)
    return jsonify({"results": [user]})

if __name__ == '__main__':
    app.run(debug=True)






import React, { useState, useEffect } from 'react';

const App = () => {
    const [user, setUser] = useState(null);
    const [loading, setLoading] = useState(true);

    // useEffect hook to simulate fetching data when the component mounts
    useEffect(() => {
        // Simulating a fetch request (using setTimeout to mimic an API call)
        setTimeout(() => {
            const fetchedUser = {
                id: 1,
                name: { first: 'John', last: 'Doe' },
                email: 'john.doe@example.com',
                picture: { medium: 'https://via.placeholder.com/150' }
            };

            setUser(fetchedUser);  // Update state with fetched data
            setLoading(false);      // Stop loading once data is fetched
        }, 2000);  // Simulate a 2-second delay for fetching data
    }, []);  // Empty dependency array means this effect runs once when the component mounts

    if (loading) return <p>Loading...</p>;

    return (
        <div>
            <h1>User Info</h1>
            {user && (
                <div>
                    <p><strong>Name:</strong> {user.name.first} {user.name.last}</p>
                    <p><strong>Email:</strong> {user.email}</p>
                    <img src={user.picture.medium} alt="User" width="150" />
                </div>
            )}
        </div>
    );
}

export default App;

